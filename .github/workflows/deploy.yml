name: workflow

on:
  push:
    branches:
      - main

jobs:
  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest

    container: python:3.10
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: /root/.venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Create virtual environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: python3 -m venv .venv
        working-directory: /root

      - name: Activate virtual environment
        run: echo '/root/.venv/bin' >> $GITHUB_PATH

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Export requirements.txt
        run: poetry export -vv --without-hashes --no-ansi --no-interaction --format requirements.txt --output requirements.txt

      - uses: actions/upload-artifact@v2
        with:
          name: requirements.txt
          path: requirements.txt

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: dependencies

    container: python:3.10.3-slim

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: /root/.venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Activate virtual environment
        run: echo '/root/.venv/bin' >> $GITHUB_PATH

      - name: Run tests with pytest
        run: pytest -s

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      # Configure Docker with Credentials
      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build & Publish
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}
          gcloud config set run/region us-central1

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          gcloud run deploy ${{ secrets.GCP_APPLICATION }} --image gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }} \
          --platform managed \
          --allow-unauthenticated \
          --memory 512M
