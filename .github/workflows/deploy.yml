name: workflow

on:
  push:
    branches:
      - main

jobs:
  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest

    container: python:3.10
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: /root/.venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Create virtual environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: python3 -m venv .venv
        working-directory: /root

      - name: Activate virtual environment
        run: echo '/root/.venv/bin' >> $GITHUB_PATH

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Export requirements.txt
        run: poetry export -vv --without-hashes --no-ansi --no-interaction --format requirements.txt --output requirements.txt

      - uses: actions/upload-artifact@v2
        with:
          name: requirements.txt
          path: requirements.txt

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: dependencies

    container: python:3.10.3-slim

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: /root/.venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Activate virtual environment
        run: echo '/root/.venv/bin' >> $GITHUB_PATH

      - name: Pytest Coverage
        run: pytest --cov=src tests/ --cov-fail-under 100

#  cloud-run-deploy:
#    name: Push
#    runs-on: ubuntu-latest
#    needs: dependencies
